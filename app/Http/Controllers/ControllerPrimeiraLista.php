<?php

namespace App\Http\Controllers;

use App\Models\PrimeiraLista\exer1;
use App\Models\PrimeiraLista\exer3;
use App\Models\PrimeiraLista\exer4;
use App\Models\PrimeiraLista\exer5;
use Illuminate\Http\Request;

class ControllerPrimeiraLista extends Controller
{
   

   /* public function Exe2($var1, $var2){
        // parent::__call($method, $parameters); // TODO: Change the autogenerated stub
        exer2::class($var1, $var2);
        exer2::Calculo();
    }

    public function Exe3($var1){
        // parent::__call($method, $parameters); // TODO: Change the autogenerated stub
        exer3::class($var1);
        exer3::VerValor();
    }

    public function Exe4($var1){
        // parent::__call($method, $parameters); // TODO: Change the autogenerated stub
        exer4::class($var1);
        exer4::VerfValor();
    }

    public function Exe5($var1, $var2,$var3, $var4){
        // parent::__call($method, $parameters); // TODO: Change the autogenerated stub
        exer5::class($var1, $var2,$var3, $var4);
        exer5::CalculoEprint();
    } ACHEI Q IRIAMOS UTILIZZAR A REGRA MVC SEI LA "______________________________________"    */ 

    public function exer1Form()
    {
        return view('exe1');
    }

    public function exer2Form()
    {
        return view('exe2');
    }
    public function exer3Form()
    {
        return view('exe3');
    }
    public function exer4Form()
    {
        return view('exe4');
    }
    public function exer5Form()
    {
        return view('exe5');
    }

    public function exer5Resultado(Request $request)
    { 

        $var1 = $request["valor1"];
        $var2 =  $request["valor2"];
        $var3 =  $request["valor3"];
        $var4 =  $request["valor4"];
        
            $result_ ="média total: " .(($var1 + $var2 + $var3 + $var4)/  4);
           if($result_ >= 7){
                $aprovacao = "aprovado";
           }
           else{
               $aprovacao = "desaprovado";
           }
           $result = $result_." REMUSO:  " .$aprovacao;
        
    
      
        return view('exe5', compact('result'));
    }


    public function exer4Resultado(Request $request)
    { 
        $var1 = $request['valor1'];
        $arr_ = [];
        if ($var1 % 2 == 0 && $var1 != 0) {
            $arr_.add("par");
        }
        else if ($var1 == 0){
            $arr_.add("Zero");
        }
        else if($var1 %2 ==1){
            $arr_.add("impar");
        }
        else{
            $arr_.add("insira um valor válido");  
        }
    

       
        return view('exe4', compact('arr_'));
    }

    public function exer3Resultado(Request $request)
    { 
        $var1 = $request['valor1'];
        if ($var1 > 10) {
          $result =   "maior que 10";
        }
        else{
            $result = "menor que 10";
        }
        
        return view('exe3', compact('result'));
    }


    public function exer2Resultado(Request $request)
    { 

        $valor_peso = $request['valor1'];
        $valor_qtd = $request['valor2'];
        
        $valor_total = $valor_peso * $valor_qtd;
        $result = "valor total consumido: ". $valor_total;
        return view('exe2', compact('result'));
    }

    public function exer1Resultado(Request $request)
    {
        $valor_produto = $request['valor_produto'];
        $valor_pago = $request['valor_pago'];
        if ($valor_pago == $valor_produto)
            $resultado = "Não há troco!";
        elseif($valor_pago<$valor_produto)
            $resultado = "Valor insuficiente para pagamento!";
        else
            $resultado = "Valor do troco: ".($valor_pago - $valor_produto);
        return view('exe1', compact('resultado'));
    }
}
